{"name":"bunyan-hub","tagline":"A centralized bunyan log aggregator.","body":"# bunyan-hub\r\n\r\nA centralized bunyan log aggregator.\r\n\r\n[bunyan](https://github.com/trentm/node-bunyan) is a simple and powerful log module for node.js. This program is a server which collecting log events from all local node service. It simply start a tcp server on 28692 (BUNYA on phonepad) and waiting other node program to send new-line determined JSON string to it. You can use [bunyan-hub-logger](https://www.npmjs.com/package/bunyan-hub-logger) (or [bunyan-pub-stream](https://www.npmjs.com/package/bunyan-pub-stream) + bunyan) to push log to it and use [bunyan-sub](https://www.npmjs.com/package/bunyan-sub) cli tool to subcribes to it with specified conditions. or use [bunyan-sub-stream](https://www.npmjs.com/package/bunyan-sub-stream) api for programing use.\r\n\r\nI'm also planning develop a web dashboad for it like [logio](http://logio.org/) and then it would a killer app for having a local centralized log aggregator.\r\n\r\n## install\r\n\r\n```bash\r\nnpm i -g bunyan-hub\r\n```\r\n\r\n## usage\r\n\r\n```bash\r\nbunyanhub start\r\nbunyanhub stop\r\n```\r\n\r\n## protocol\r\nonce connected to localhost:28692 which bunyan-hub listening, you could write a JSON with `cmd` property ending with `\\n` or FIN.\r\n\r\n`{\"cmd\":\"stop\"}\\n` will stop the server.\r\n`{\"cmd\":\"version\"}\\n` will give you bunyah-hub version back.\r\n`{\"cmd\":\"publish\"}\\n` will return you nothing, but expect you to further sending more JSON string which is in bunyan record format.\r\n`{\"cmd\":\"subscribe\"}\\n` will turn you tcp client into subscription mode, bunyan-hub will send you bunyan records in new-line determined JSON string.\r\n\r\nusually you don't need to use raw TCP connection you self, instead using high level modules mentioned in the top section of this readme document.\r\n\r\n## license\r\nMIT\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}